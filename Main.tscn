[gd_scene load_steps=10 format=2]

[ext_resource path="res://addons/svg_data/basic_svg_spatial.shader" type="Shader" id=1]
[ext_resource path="res://addons/svg_data/svg_data.gd" type="Script" id=2]

[sub_resource type="QuadMesh" id=1]

[sub_resource type="Image" id=8]
data = {
"data": PoolByteArray( 0, 0, 0, 65, 0, 0, 0, 65, 0, 0, 112, 65, 0, 0, 0, 64, 0, 0, 128, 63, 0, 0, 128, 191, 167, 25, 98, 61, 109, 79, 168, 190, 109, 79, 168, 62, 167, 25, 98, 61, 29, 39, 250, 191, 37, 94, 172, 63, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 0, 164, 160, 32, 61, 160, 166, 166, 62, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 128, 191, 210, 8, 89, 63, 194, 195, 7, 191, 194, 195, 7, 63, 210, 8, 89, 63, 46, 187, 107, 192, 43, 188, 144, 191, 0, 0, 128, 63, 0, 0, 0, 191, 0, 0, 0, 0, 9, 249, 248, 62, 186, 192, 64, 60, 186, 192, 64, 60, 0, 0, 128, 63 ),
"format": "RFloat",
"height": 1,
"mipmaps": false,
"width": 34
}

[sub_resource type="ImageTexture" id=7]
flags = 0
flags = 0
image = SubResource( 8 )
size = Vector2( 34, 1 )

[sub_resource type="ShaderMaterial" id=2]
shader = ExtResource( 1 )
shader_param/svg_elements = SubResource( 7 )

[sub_resource type="GDScript" id=3]
script/source = "tool
extends MeshInstance

var SVGData = load(\"res://addons/svg_data/svg_data.gd\");

export var svg_elements : Resource;
export var svg_size : Vector2 = Vector2.ONE;

var img : Image;
var texture : ImageTexture;

var material : ShaderMaterial;

var saved = false;

func _ready():
	print(\"parent ready!\")
	img = Image.new();
	texture = ImageTexture.new();
	
	material = self.get_surface_material(0);
	svg_elements = SVGData.new();
	$TextureRect.texture = texture;

func _process(delta):
	svg_elements.size = svg_size;
	var svg_data = svg_elements.get_svg_data();
	img.create_from_data(svg_data.size() / 4, 1, false, Image.FORMAT_RF, svg_data);
	texture.create_from_image(img, 0);
	
	material.set_shader_param(\"svg_elements\", texture);
	if not saved:
		img.save_png(\"res://svg_data.png\");
		saved = true;
"

[sub_resource type="Resource" id=4]
script = ExtResource( 2 )
_elements = [ Object(Reference,"script":Resource( "res://addons/svg_data/svg_rect.gd" ),"_svg_data":null,"id":"GreenRect","parent_id":"","transform":Transform2D( 0.496802, 2.95858, -2.95858, 0.496802, 4.955, 5.113 ),"offset":Vector2( -0.5, -0.5 ),"fill_type":0,"fill":Color( 0.0392157, 0.32549, 0, 1 ))
, Object(Reference,"script":Resource( "res://addons/svg_data/svg_rect.gd" ),"_svg_data":null,"id":"RedRect","parent_id":"","transform":Transform2D( 0.847791, 0.530331, -0.530331, 0.847791, 2.523, 2.912 ),"offset":Vector2( 1, -0.5 ),"fill_type":0,"fill":Color( 0.486275, 0.0117647, 0.0117647, 1 ))
 ]

[sub_resource type="GDScript" id=5]
script/source = "tool
extends Node

var SVGRect = load(\"res://addons/svg_data/svg_rect.gd\");

var element;
var svg_data;

export var origin : Vector2 = Vector2.ZERO;
export var scale : Vector2 = Vector2.ONE;
export var rotation : float = 0.0;
export var offset : Vector2 = Vector2.ZERO;
export var fill : Color;

func _ready():
	
	print(\"child ready!\");
	element = SVGRect.new();
	element.id = self.name;
	
	yield(get_tree(), \"idle_frame\");
	svg_data = get_parent().svg_elements;
	svg_data.add_element(element);

func _process(delta):
	if element:
		element.transform = Transform2D(Vector2(scale.x, 0.0), Vector2(0.0,scale.y), Vector2.ZERO);
		element.transform = element.transform.rotated(rotation);
		element.transform.origin = origin;
		element.offset = offset;
		#element.position = position;
		#element.size = size;
		element.fill = fill;
		#element.transform = element.transform.rotated(delta).orthonormalized();
"

[node name="Spatial" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
mesh = SubResource( 1 )
material/0 = SubResource( 2 )
script = SubResource( 3 )
svg_elements = SubResource( 4 )
svg_size = Vector2( 8, 8 )

[node name="GreenRect" type="Node" parent="MeshInstance"]
script = SubResource( 5 )
origin = Vector2( 4.955, 5.113 )
scale = Vector2( 3, 3 )
rotation = 1038.13
offset = Vector2( -0.5, -0.5 )
fill = Color( 0.0392157, 0.32549, 0, 1 )

[node name="RedRect" type="Node" parent="MeshInstance"]
script = SubResource( 5 )
origin = Vector2( 2.523, 2.912 )
scale = Vector2( 1, 1 )
rotation = 1087.55
offset = Vector2( 1, -0.5 )
fill = Color( 0.486275, 0.0117647, 0.0117647, 1 )

[node name="TextureRect" type="TextureRect" parent="MeshInstance"]
margin_right = 346.0
margin_bottom = 319.0
texture = SubResource( 7 )
expand = true
stretch_mode = 6
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0.827883 )
